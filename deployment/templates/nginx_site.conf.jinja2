log_format timed_combined '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" "$request_body"'
                        '$request_time $upstream_response_time seconds';

server {
    listen 80;
    server_name "";
    access_log {{ LOG_DIR }}/nginx.log timed_combined;

    location / {
        proxy_pass http://127.0.0.1:4567;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        {% if not DEV %}

        proxy_redirect http://127.0.0.1:4567/ncdr/ http://$host/ncdr/;
        proxy_set_header SCRIPT_NAME /ncdr;
        {% endif %}


        client_max_body_size 15m;
    }

    # Redirect root favicon requests to the Django app
    #
    # Browsers typically look for a favicon at the root URL.  Since our
    # application (in gunicorn) will 500 if we request URLs root URLs which
    # aren't prepended with /ncdr we want to avoid polluting our logs with
    # stack traces for something we can't fix.  So permanently redirect those
    # requests to our known-good favicon URL.
    location /favicon.ico {
      return 301 http://$host/ncdr/static/favicon.ico;
    }

    location /protected {
         internal;
         alias /;
    }
  }
